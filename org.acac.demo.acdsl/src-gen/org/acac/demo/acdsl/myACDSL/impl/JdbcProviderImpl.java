/**
 * generated by Xtext 2.11.0
 */
package org.acac.demo.acdsl.myACDSL.impl;

import org.acac.demo.acdsl.myACDSL.CommonParam;
import org.acac.demo.acdsl.myACDSL.JdbcProvider;
import org.acac.demo.acdsl.myACDSL.MyACDSLPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Jdbc Provider</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.acac.demo.acdsl.myACDSL.impl.JdbcProviderImpl#getScope <em>Scope</em>}</li>
 *   <li>{@link org.acac.demo.acdsl.myACDSL.impl.JdbcProviderImpl#getDatabaseType <em>Database Type</em>}</li>
 *   <li>{@link org.acac.demo.acdsl.myACDSL.impl.JdbcProviderImpl#getProviderType <em>Provider Type</em>}</li>
 *   <li>{@link org.acac.demo.acdsl.myACDSL.impl.JdbcProviderImpl#getImplementationType <em>Implementation Type</em>}</li>
 *   <li>{@link org.acac.demo.acdsl.myACDSL.impl.JdbcProviderImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.acac.demo.acdsl.myACDSL.impl.JdbcProviderImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link org.acac.demo.acdsl.myACDSL.impl.JdbcProviderImpl#getClasspath <em>Classpath</em>}</li>
 * </ul>
 *
 * @generated
 */
public class JdbcProviderImpl extends ConfigurationTypeImpl implements JdbcProvider
{
  /**
   * The cached value of the '{@link #getScope() <em>Scope</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScope()
   * @generated
   * @ordered
   */
  protected CommonParam scope;

  /**
   * The default value of the '{@link #getDatabaseType() <em>Database Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDatabaseType()
   * @generated
   * @ordered
   */
  protected static final String DATABASE_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDatabaseType() <em>Database Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDatabaseType()
   * @generated
   * @ordered
   */
  protected String databaseType = DATABASE_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getProviderType() <em>Provider Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProviderType()
   * @generated
   * @ordered
   */
  protected static final String PROVIDER_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getProviderType() <em>Provider Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProviderType()
   * @generated
   * @ordered
   */
  protected String providerType = PROVIDER_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getImplementationType() <em>Implementation Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImplementationType()
   * @generated
   * @ordered
   */
  protected static final String IMPLEMENTATION_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getImplementationType() <em>Implementation Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImplementationType()
   * @generated
   * @ordered
   */
  protected String implementationType = IMPLEMENTATION_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * The cached value of the '{@link #getClasspath() <em>Classpath</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClasspath()
   * @generated
   * @ordered
   */
  protected CommonParam classpath;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected JdbcProviderImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyACDSLPackage.Literals.JDBC_PROVIDER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CommonParam getScope()
  {
    if (scope != null && scope.eIsProxy())
    {
      InternalEObject oldScope = (InternalEObject)scope;
      scope = (CommonParam)eResolveProxy(oldScope);
      if (scope != oldScope)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyACDSLPackage.JDBC_PROVIDER__SCOPE, oldScope, scope));
      }
    }
    return scope;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CommonParam basicGetScope()
  {
    return scope;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setScope(CommonParam newScope)
  {
    CommonParam oldScope = scope;
    scope = newScope;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyACDSLPackage.JDBC_PROVIDER__SCOPE, oldScope, scope));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDatabaseType()
  {
    return databaseType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDatabaseType(String newDatabaseType)
  {
    String oldDatabaseType = databaseType;
    databaseType = newDatabaseType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyACDSLPackage.JDBC_PROVIDER__DATABASE_TYPE, oldDatabaseType, databaseType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getProviderType()
  {
    return providerType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setProviderType(String newProviderType)
  {
    String oldProviderType = providerType;
    providerType = newProviderType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyACDSLPackage.JDBC_PROVIDER__PROVIDER_TYPE, oldProviderType, providerType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getImplementationType()
  {
    return implementationType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setImplementationType(String newImplementationType)
  {
    String oldImplementationType = implementationType;
    implementationType = newImplementationType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyACDSLPackage.JDBC_PROVIDER__IMPLEMENTATION_TYPE, oldImplementationType, implementationType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyACDSLPackage.JDBC_PROVIDER__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyACDSLPackage.JDBC_PROVIDER__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CommonParam getClasspath()
  {
    if (classpath != null && classpath.eIsProxy())
    {
      InternalEObject oldClasspath = (InternalEObject)classpath;
      classpath = (CommonParam)eResolveProxy(oldClasspath);
      if (classpath != oldClasspath)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyACDSLPackage.JDBC_PROVIDER__CLASSPATH, oldClasspath, classpath));
      }
    }
    return classpath;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CommonParam basicGetClasspath()
  {
    return classpath;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setClasspath(CommonParam newClasspath)
  {
    CommonParam oldClasspath = classpath;
    classpath = newClasspath;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyACDSLPackage.JDBC_PROVIDER__CLASSPATH, oldClasspath, classpath));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyACDSLPackage.JDBC_PROVIDER__SCOPE:
        if (resolve) return getScope();
        return basicGetScope();
      case MyACDSLPackage.JDBC_PROVIDER__DATABASE_TYPE:
        return getDatabaseType();
      case MyACDSLPackage.JDBC_PROVIDER__PROVIDER_TYPE:
        return getProviderType();
      case MyACDSLPackage.JDBC_PROVIDER__IMPLEMENTATION_TYPE:
        return getImplementationType();
      case MyACDSLPackage.JDBC_PROVIDER__NAME:
        return getName();
      case MyACDSLPackage.JDBC_PROVIDER__DESCRIPTION:
        return getDescription();
      case MyACDSLPackage.JDBC_PROVIDER__CLASSPATH:
        if (resolve) return getClasspath();
        return basicGetClasspath();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyACDSLPackage.JDBC_PROVIDER__SCOPE:
        setScope((CommonParam)newValue);
        return;
      case MyACDSLPackage.JDBC_PROVIDER__DATABASE_TYPE:
        setDatabaseType((String)newValue);
        return;
      case MyACDSLPackage.JDBC_PROVIDER__PROVIDER_TYPE:
        setProviderType((String)newValue);
        return;
      case MyACDSLPackage.JDBC_PROVIDER__IMPLEMENTATION_TYPE:
        setImplementationType((String)newValue);
        return;
      case MyACDSLPackage.JDBC_PROVIDER__NAME:
        setName((String)newValue);
        return;
      case MyACDSLPackage.JDBC_PROVIDER__DESCRIPTION:
        setDescription((String)newValue);
        return;
      case MyACDSLPackage.JDBC_PROVIDER__CLASSPATH:
        setClasspath((CommonParam)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyACDSLPackage.JDBC_PROVIDER__SCOPE:
        setScope((CommonParam)null);
        return;
      case MyACDSLPackage.JDBC_PROVIDER__DATABASE_TYPE:
        setDatabaseType(DATABASE_TYPE_EDEFAULT);
        return;
      case MyACDSLPackage.JDBC_PROVIDER__PROVIDER_TYPE:
        setProviderType(PROVIDER_TYPE_EDEFAULT);
        return;
      case MyACDSLPackage.JDBC_PROVIDER__IMPLEMENTATION_TYPE:
        setImplementationType(IMPLEMENTATION_TYPE_EDEFAULT);
        return;
      case MyACDSLPackage.JDBC_PROVIDER__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MyACDSLPackage.JDBC_PROVIDER__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
      case MyACDSLPackage.JDBC_PROVIDER__CLASSPATH:
        setClasspath((CommonParam)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyACDSLPackage.JDBC_PROVIDER__SCOPE:
        return scope != null;
      case MyACDSLPackage.JDBC_PROVIDER__DATABASE_TYPE:
        return DATABASE_TYPE_EDEFAULT == null ? databaseType != null : !DATABASE_TYPE_EDEFAULT.equals(databaseType);
      case MyACDSLPackage.JDBC_PROVIDER__PROVIDER_TYPE:
        return PROVIDER_TYPE_EDEFAULT == null ? providerType != null : !PROVIDER_TYPE_EDEFAULT.equals(providerType);
      case MyACDSLPackage.JDBC_PROVIDER__IMPLEMENTATION_TYPE:
        return IMPLEMENTATION_TYPE_EDEFAULT == null ? implementationType != null : !IMPLEMENTATION_TYPE_EDEFAULT.equals(implementationType);
      case MyACDSLPackage.JDBC_PROVIDER__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MyACDSLPackage.JDBC_PROVIDER__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
      case MyACDSLPackage.JDBC_PROVIDER__CLASSPATH:
        return classpath != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (databaseType: ");
    result.append(databaseType);
    result.append(", providerType: ");
    result.append(providerType);
    result.append(", implementationType: ");
    result.append(implementationType);
    result.append(", name: ");
    result.append(name);
    result.append(", description: ");
    result.append(description);
    result.append(')');
    return result.toString();
  }

} //JdbcProviderImpl
