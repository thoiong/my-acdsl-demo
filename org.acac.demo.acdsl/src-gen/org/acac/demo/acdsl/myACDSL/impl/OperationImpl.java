/**
 * generated by Xtext 2.11.0
 */
package org.acac.demo.acdsl.myACDSL.impl;

import java.util.Collection;

import org.acac.demo.acdsl.myACDSL.MyACDSLPackage;
import org.acac.demo.acdsl.myACDSL.Operation;
import org.acac.demo.acdsl.myACDSL.SupportedContainerOperations;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.util.EDataTypeEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Operation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.acac.demo.acdsl.myACDSL.impl.OperationImpl#getServerOp <em>Server Op</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OperationImpl extends AbstractElementImpl implements Operation
{
  /**
   * The cached value of the '{@link #getServerOp() <em>Server Op</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getServerOp()
   * @generated
   * @ordered
   */
  protected EList<SupportedContainerOperations> serverOp;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OperationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyACDSLPackage.Literals.OPERATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<SupportedContainerOperations> getServerOp()
  {
    if (serverOp == null)
    {
      serverOp = new EDataTypeEList<SupportedContainerOperations>(SupportedContainerOperations.class, this, MyACDSLPackage.OPERATION__SERVER_OP);
    }
    return serverOp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyACDSLPackage.OPERATION__SERVER_OP:
        return getServerOp();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyACDSLPackage.OPERATION__SERVER_OP:
        getServerOp().clear();
        getServerOp().addAll((Collection<? extends SupportedContainerOperations>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyACDSLPackage.OPERATION__SERVER_OP:
        getServerOp().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyACDSLPackage.OPERATION__SERVER_OP:
        return serverOp != null && !serverOp.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (serverOp: ");
    result.append(serverOp);
    result.append(')');
    return result.toString();
  }

} //OperationImpl
