/**
 * generated by Xtext 2.11.0
 */
package org.acac.demo.acdsl.myACDSL.impl;

import org.acac.demo.acdsl.myACDSL.CommonParam;
import org.acac.demo.acdsl.myACDSL.DataSource;
import org.acac.demo.acdsl.myACDSL.MyACDSLPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Data Source</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.acac.demo.acdsl.myACDSL.impl.DataSourceImpl#getScope <em>Scope</em>}</li>
 *   <li>{@link org.acac.demo.acdsl.myACDSL.impl.DataSourceImpl#getDataSourceName <em>Data Source Name</em>}</li>
 *   <li>{@link org.acac.demo.acdsl.myACDSL.impl.DataSourceImpl#getJndiName <em>Jndi Name</em>}</li>
 *   <li>{@link org.acac.demo.acdsl.myACDSL.impl.DataSourceImpl#getJdbcProviderName <em>Jdbc Provider Name</em>}</li>
 *   <li>{@link org.acac.demo.acdsl.myACDSL.impl.DataSourceImpl#getDataSourceUrl <em>Data Source Url</em>}</li>
 *   <li>{@link org.acac.demo.acdsl.myACDSL.impl.DataSourceImpl#getComponentManagedAuthenticationAlias <em>Component Managed Authentication Alias</em>}</li>
 *   <li>{@link org.acac.demo.acdsl.myACDSL.impl.DataSourceImpl#getMappingConfigurationAlias <em>Mapping Configuration Alias</em>}</li>
 *   <li>{@link org.acac.demo.acdsl.myACDSL.impl.DataSourceImpl#getContainerMmanagedAuthenticationAlias <em>Container Mmanaged Authentication Alias</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DataSourceImpl extends ConfigurationTypeImpl implements DataSource
{
  /**
   * The cached value of the '{@link #getScope() <em>Scope</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScope()
   * @generated
   * @ordered
   */
  protected CommonParam scope;

  /**
   * The default value of the '{@link #getDataSourceName() <em>Data Source Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataSourceName()
   * @generated
   * @ordered
   */
  protected static final String DATA_SOURCE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDataSourceName() <em>Data Source Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataSourceName()
   * @generated
   * @ordered
   */
  protected String dataSourceName = DATA_SOURCE_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getJndiName() <em>Jndi Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJndiName()
   * @generated
   * @ordered
   */
  protected static final String JNDI_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getJndiName() <em>Jndi Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJndiName()
   * @generated
   * @ordered
   */
  protected String jndiName = JNDI_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getJdbcProviderName() <em>Jdbc Provider Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJdbcProviderName()
   * @generated
   * @ordered
   */
  protected static final String JDBC_PROVIDER_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getJdbcProviderName() <em>Jdbc Provider Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJdbcProviderName()
   * @generated
   * @ordered
   */
  protected String jdbcProviderName = JDBC_PROVIDER_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getDataSourceUrl() <em>Data Source Url</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataSourceUrl()
   * @generated
   * @ordered
   */
  protected static final String DATA_SOURCE_URL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDataSourceUrl() <em>Data Source Url</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataSourceUrl()
   * @generated
   * @ordered
   */
  protected String dataSourceUrl = DATA_SOURCE_URL_EDEFAULT;

  /**
   * The cached value of the '{@link #getComponentManagedAuthenticationAlias() <em>Component Managed Authentication Alias</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComponentManagedAuthenticationAlias()
   * @generated
   * @ordered
   */
  protected CommonParam componentManagedAuthenticationAlias;

  /**
   * The cached value of the '{@link #getMappingConfigurationAlias() <em>Mapping Configuration Alias</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMappingConfigurationAlias()
   * @generated
   * @ordered
   */
  protected CommonParam mappingConfigurationAlias;

  /**
   * The cached value of the '{@link #getContainerMmanagedAuthenticationAlias() <em>Container Mmanaged Authentication Alias</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContainerMmanagedAuthenticationAlias()
   * @generated
   * @ordered
   */
  protected CommonParam containerMmanagedAuthenticationAlias;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DataSourceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyACDSLPackage.Literals.DATA_SOURCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CommonParam getScope()
  {
    if (scope != null && scope.eIsProxy())
    {
      InternalEObject oldScope = (InternalEObject)scope;
      scope = (CommonParam)eResolveProxy(oldScope);
      if (scope != oldScope)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyACDSLPackage.DATA_SOURCE__SCOPE, oldScope, scope));
      }
    }
    return scope;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CommonParam basicGetScope()
  {
    return scope;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setScope(CommonParam newScope)
  {
    CommonParam oldScope = scope;
    scope = newScope;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyACDSLPackage.DATA_SOURCE__SCOPE, oldScope, scope));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDataSourceName()
  {
    return dataSourceName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDataSourceName(String newDataSourceName)
  {
    String oldDataSourceName = dataSourceName;
    dataSourceName = newDataSourceName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyACDSLPackage.DATA_SOURCE__DATA_SOURCE_NAME, oldDataSourceName, dataSourceName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getJndiName()
  {
    return jndiName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setJndiName(String newJndiName)
  {
    String oldJndiName = jndiName;
    jndiName = newJndiName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyACDSLPackage.DATA_SOURCE__JNDI_NAME, oldJndiName, jndiName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getJdbcProviderName()
  {
    return jdbcProviderName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setJdbcProviderName(String newJdbcProviderName)
  {
    String oldJdbcProviderName = jdbcProviderName;
    jdbcProviderName = newJdbcProviderName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyACDSLPackage.DATA_SOURCE__JDBC_PROVIDER_NAME, oldJdbcProviderName, jdbcProviderName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDataSourceUrl()
  {
    return dataSourceUrl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDataSourceUrl(String newDataSourceUrl)
  {
    String oldDataSourceUrl = dataSourceUrl;
    dataSourceUrl = newDataSourceUrl;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyACDSLPackage.DATA_SOURCE__DATA_SOURCE_URL, oldDataSourceUrl, dataSourceUrl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CommonParam getComponentManagedAuthenticationAlias()
  {
    if (componentManagedAuthenticationAlias != null && componentManagedAuthenticationAlias.eIsProxy())
    {
      InternalEObject oldComponentManagedAuthenticationAlias = (InternalEObject)componentManagedAuthenticationAlias;
      componentManagedAuthenticationAlias = (CommonParam)eResolveProxy(oldComponentManagedAuthenticationAlias);
      if (componentManagedAuthenticationAlias != oldComponentManagedAuthenticationAlias)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyACDSLPackage.DATA_SOURCE__COMPONENT_MANAGED_AUTHENTICATION_ALIAS, oldComponentManagedAuthenticationAlias, componentManagedAuthenticationAlias));
      }
    }
    return componentManagedAuthenticationAlias;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CommonParam basicGetComponentManagedAuthenticationAlias()
  {
    return componentManagedAuthenticationAlias;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setComponentManagedAuthenticationAlias(CommonParam newComponentManagedAuthenticationAlias)
  {
    CommonParam oldComponentManagedAuthenticationAlias = componentManagedAuthenticationAlias;
    componentManagedAuthenticationAlias = newComponentManagedAuthenticationAlias;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyACDSLPackage.DATA_SOURCE__COMPONENT_MANAGED_AUTHENTICATION_ALIAS, oldComponentManagedAuthenticationAlias, componentManagedAuthenticationAlias));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CommonParam getMappingConfigurationAlias()
  {
    if (mappingConfigurationAlias != null && mappingConfigurationAlias.eIsProxy())
    {
      InternalEObject oldMappingConfigurationAlias = (InternalEObject)mappingConfigurationAlias;
      mappingConfigurationAlias = (CommonParam)eResolveProxy(oldMappingConfigurationAlias);
      if (mappingConfigurationAlias != oldMappingConfigurationAlias)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyACDSLPackage.DATA_SOURCE__MAPPING_CONFIGURATION_ALIAS, oldMappingConfigurationAlias, mappingConfigurationAlias));
      }
    }
    return mappingConfigurationAlias;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CommonParam basicGetMappingConfigurationAlias()
  {
    return mappingConfigurationAlias;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMappingConfigurationAlias(CommonParam newMappingConfigurationAlias)
  {
    CommonParam oldMappingConfigurationAlias = mappingConfigurationAlias;
    mappingConfigurationAlias = newMappingConfigurationAlias;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyACDSLPackage.DATA_SOURCE__MAPPING_CONFIGURATION_ALIAS, oldMappingConfigurationAlias, mappingConfigurationAlias));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CommonParam getContainerMmanagedAuthenticationAlias()
  {
    if (containerMmanagedAuthenticationAlias != null && containerMmanagedAuthenticationAlias.eIsProxy())
    {
      InternalEObject oldContainerMmanagedAuthenticationAlias = (InternalEObject)containerMmanagedAuthenticationAlias;
      containerMmanagedAuthenticationAlias = (CommonParam)eResolveProxy(oldContainerMmanagedAuthenticationAlias);
      if (containerMmanagedAuthenticationAlias != oldContainerMmanagedAuthenticationAlias)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyACDSLPackage.DATA_SOURCE__CONTAINER_MMANAGED_AUTHENTICATION_ALIAS, oldContainerMmanagedAuthenticationAlias, containerMmanagedAuthenticationAlias));
      }
    }
    return containerMmanagedAuthenticationAlias;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CommonParam basicGetContainerMmanagedAuthenticationAlias()
  {
    return containerMmanagedAuthenticationAlias;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setContainerMmanagedAuthenticationAlias(CommonParam newContainerMmanagedAuthenticationAlias)
  {
    CommonParam oldContainerMmanagedAuthenticationAlias = containerMmanagedAuthenticationAlias;
    containerMmanagedAuthenticationAlias = newContainerMmanagedAuthenticationAlias;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyACDSLPackage.DATA_SOURCE__CONTAINER_MMANAGED_AUTHENTICATION_ALIAS, oldContainerMmanagedAuthenticationAlias, containerMmanagedAuthenticationAlias));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyACDSLPackage.DATA_SOURCE__SCOPE:
        if (resolve) return getScope();
        return basicGetScope();
      case MyACDSLPackage.DATA_SOURCE__DATA_SOURCE_NAME:
        return getDataSourceName();
      case MyACDSLPackage.DATA_SOURCE__JNDI_NAME:
        return getJndiName();
      case MyACDSLPackage.DATA_SOURCE__JDBC_PROVIDER_NAME:
        return getJdbcProviderName();
      case MyACDSLPackage.DATA_SOURCE__DATA_SOURCE_URL:
        return getDataSourceUrl();
      case MyACDSLPackage.DATA_SOURCE__COMPONENT_MANAGED_AUTHENTICATION_ALIAS:
        if (resolve) return getComponentManagedAuthenticationAlias();
        return basicGetComponentManagedAuthenticationAlias();
      case MyACDSLPackage.DATA_SOURCE__MAPPING_CONFIGURATION_ALIAS:
        if (resolve) return getMappingConfigurationAlias();
        return basicGetMappingConfigurationAlias();
      case MyACDSLPackage.DATA_SOURCE__CONTAINER_MMANAGED_AUTHENTICATION_ALIAS:
        if (resolve) return getContainerMmanagedAuthenticationAlias();
        return basicGetContainerMmanagedAuthenticationAlias();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyACDSLPackage.DATA_SOURCE__SCOPE:
        setScope((CommonParam)newValue);
        return;
      case MyACDSLPackage.DATA_SOURCE__DATA_SOURCE_NAME:
        setDataSourceName((String)newValue);
        return;
      case MyACDSLPackage.DATA_SOURCE__JNDI_NAME:
        setJndiName((String)newValue);
        return;
      case MyACDSLPackage.DATA_SOURCE__JDBC_PROVIDER_NAME:
        setJdbcProviderName((String)newValue);
        return;
      case MyACDSLPackage.DATA_SOURCE__DATA_SOURCE_URL:
        setDataSourceUrl((String)newValue);
        return;
      case MyACDSLPackage.DATA_SOURCE__COMPONENT_MANAGED_AUTHENTICATION_ALIAS:
        setComponentManagedAuthenticationAlias((CommonParam)newValue);
        return;
      case MyACDSLPackage.DATA_SOURCE__MAPPING_CONFIGURATION_ALIAS:
        setMappingConfigurationAlias((CommonParam)newValue);
        return;
      case MyACDSLPackage.DATA_SOURCE__CONTAINER_MMANAGED_AUTHENTICATION_ALIAS:
        setContainerMmanagedAuthenticationAlias((CommonParam)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyACDSLPackage.DATA_SOURCE__SCOPE:
        setScope((CommonParam)null);
        return;
      case MyACDSLPackage.DATA_SOURCE__DATA_SOURCE_NAME:
        setDataSourceName(DATA_SOURCE_NAME_EDEFAULT);
        return;
      case MyACDSLPackage.DATA_SOURCE__JNDI_NAME:
        setJndiName(JNDI_NAME_EDEFAULT);
        return;
      case MyACDSLPackage.DATA_SOURCE__JDBC_PROVIDER_NAME:
        setJdbcProviderName(JDBC_PROVIDER_NAME_EDEFAULT);
        return;
      case MyACDSLPackage.DATA_SOURCE__DATA_SOURCE_URL:
        setDataSourceUrl(DATA_SOURCE_URL_EDEFAULT);
        return;
      case MyACDSLPackage.DATA_SOURCE__COMPONENT_MANAGED_AUTHENTICATION_ALIAS:
        setComponentManagedAuthenticationAlias((CommonParam)null);
        return;
      case MyACDSLPackage.DATA_SOURCE__MAPPING_CONFIGURATION_ALIAS:
        setMappingConfigurationAlias((CommonParam)null);
        return;
      case MyACDSLPackage.DATA_SOURCE__CONTAINER_MMANAGED_AUTHENTICATION_ALIAS:
        setContainerMmanagedAuthenticationAlias((CommonParam)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyACDSLPackage.DATA_SOURCE__SCOPE:
        return scope != null;
      case MyACDSLPackage.DATA_SOURCE__DATA_SOURCE_NAME:
        return DATA_SOURCE_NAME_EDEFAULT == null ? dataSourceName != null : !DATA_SOURCE_NAME_EDEFAULT.equals(dataSourceName);
      case MyACDSLPackage.DATA_SOURCE__JNDI_NAME:
        return JNDI_NAME_EDEFAULT == null ? jndiName != null : !JNDI_NAME_EDEFAULT.equals(jndiName);
      case MyACDSLPackage.DATA_SOURCE__JDBC_PROVIDER_NAME:
        return JDBC_PROVIDER_NAME_EDEFAULT == null ? jdbcProviderName != null : !JDBC_PROVIDER_NAME_EDEFAULT.equals(jdbcProviderName);
      case MyACDSLPackage.DATA_SOURCE__DATA_SOURCE_URL:
        return DATA_SOURCE_URL_EDEFAULT == null ? dataSourceUrl != null : !DATA_SOURCE_URL_EDEFAULT.equals(dataSourceUrl);
      case MyACDSLPackage.DATA_SOURCE__COMPONENT_MANAGED_AUTHENTICATION_ALIAS:
        return componentManagedAuthenticationAlias != null;
      case MyACDSLPackage.DATA_SOURCE__MAPPING_CONFIGURATION_ALIAS:
        return mappingConfigurationAlias != null;
      case MyACDSLPackage.DATA_SOURCE__CONTAINER_MMANAGED_AUTHENTICATION_ALIAS:
        return containerMmanagedAuthenticationAlias != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (dataSourceName: ");
    result.append(dataSourceName);
    result.append(", jndiName: ");
    result.append(jndiName);
    result.append(", jdbcProviderName: ");
    result.append(jdbcProviderName);
    result.append(", dataSourceUrl: ");
    result.append(dataSourceUrl);
    result.append(')');
    return result.toString();
  }

} //DataSourceImpl
