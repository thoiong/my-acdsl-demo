/**
 * generated by Xtext 2.11.0
 */
package org.acac.demo.acdsl.myACDSL.impl;

import java.util.Collection;

import org.acac.demo.acdsl.myACDSL.Deployment;
import org.acac.demo.acdsl.myACDSL.DeploymentOp;
import org.acac.demo.acdsl.myACDSL.MyACDSLPackage;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.util.EDataTypeEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Deployment</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.acac.demo.acdsl.myACDSL.impl.DeploymentImpl#getAppOp <em>App Op</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DeploymentImpl extends AbstractElementImpl implements Deployment
{
  /**
   * The cached value of the '{@link #getAppOp() <em>App Op</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAppOp()
   * @generated
   * @ordered
   */
  protected EList<DeploymentOp> appOp;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DeploymentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyACDSLPackage.Literals.DEPLOYMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<DeploymentOp> getAppOp()
  {
    if (appOp == null)
    {
      appOp = new EDataTypeEList<DeploymentOp>(DeploymentOp.class, this, MyACDSLPackage.DEPLOYMENT__APP_OP);
    }
    return appOp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyACDSLPackage.DEPLOYMENT__APP_OP:
        return getAppOp();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyACDSLPackage.DEPLOYMENT__APP_OP:
        getAppOp().clear();
        getAppOp().addAll((Collection<? extends DeploymentOp>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyACDSLPackage.DEPLOYMENT__APP_OP:
        getAppOp().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyACDSLPackage.DEPLOYMENT__APP_OP:
        return appOp != null && !appOp.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (appOp: ");
    result.append(appOp);
    result.append(')');
    return result.toString();
  }

} //DeploymentImpl
